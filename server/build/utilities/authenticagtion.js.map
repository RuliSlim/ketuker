{"version":3,"sources":["../../src/utilities/authenticagtion.js"],"names":["authen","auth","Error","token","jwt","verify","process","env","JWT_SECRET","err","decoded","user","author","userId","prodId","Product","findById","product"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;;;;;;;AAEO,IAAMA,MAAM;AAAA,qEAAG,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACfA,IADe;AAAA;AAAA;AAAA;;AAAA,kBACH,IAAIC,KAAJ,CAAU,oBAAV,CADG;;AAAA;AAEdC,YAAAA,KAFc,GAENF,IAFM;AAAA;AAAA,mBAIDG,yBAAIC,MAAJ,CAAWF,KAAX,EAAkBG,OAAO,CAACC,GAAR,CAAYC,UAA9B,EAA0C,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC7E,kBAAID,GAAJ,EAAS,MAAM,IAAIP,KAAJ,CAAU,gBAAV,CAAN;AACT,qBAAOQ,OAAP;AACD,aAHkB,CAJC;;AAAA;AAIdC,YAAAA,IAJc;AAAA,6CAQbA,IARa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANX,MAAM;AAAA;AAAA;AAAA,GAAZ;;;;AAWA,IAAMY,MAAM;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,MAAT,SAASA,MAAT,EAAiBC,MAAjB,SAAiBA,MAAjB;;AAAA,gBACfD,MADe;AAAA;AAAA;AAAA;;AAAA,kBACD,IAAIX,KAAJ,CAAU,oBAAV,CADC;;AAAA;AAAA,gBAEfY,MAFe;AAAA;AAAA;AAAA;;AAAA,kBAED,IAAIZ,KAAJ,CAAU,oBAAV,CAFC;;AAAA;AAAA;AAAA,mBAGEa,oBAAQC,QAAR,CAAiBF,MAAjB,CAHF;;AAAA;AAGdG,YAAAA,OAHc;;AAAA,kBAIhBA,OAAO,CAACJ,MAAR,IAAkBA,MAJF;AAAA;AAAA;AAAA;;AAAA,kBAIgB,IAAIX,KAAJ,CAAU,yBAAV,CAJhB;;AAAA;AAAA,8CAKb,IALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANU,MAAM;AAAA;AAAA;AAAA,GAAZ","sourcesContent":["import jwt from 'jsonwebtoken';\nimport Product from '../models/Product';\n\nexport const authen = async auth => {\n  if (!auth) throw new Error('You have to login!');\n  const token = auth;\n\n  const user = await jwt.verify(token, process.env.JWT_SECRET, (err, decoded) => {\n    if (err) throw new Error('Invalid token!');\n    return decoded;\n  });\n  return user;\n};\n\nexport const author = async ({ userId, prodId }) => {\n  if (!userId) throw new Error('You have to login!');\n  if (!prodId) throw new Error('Product not found!');\n  const product = await Product.findById(prodId);\n  if (product.userId != userId) throw new Error('You are not authorized!');\n  return true;\n};"],"file":"authenticagtion.js"}