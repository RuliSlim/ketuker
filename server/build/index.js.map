{"version":3,"sources":["../src/index.js"],"names":["require","config","express","session","startServer","server","ApolloServer","typeDefs","resolvers","context","req","res","mongoose","connect","useNewUrlParser","useUnifiedTopology","useCreateIndex","app","use","secret","resave","saveUninitialized","applyMiddleware","cors","credentials","origin","listen","port","console","log","graphqlPath"],"mappings":";;;;;;;;AACA;;AAGA;;AACA;;;;;;;;AALAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,IAAMC,OAAO,GAAGF,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,iBAAD,CAAvB;;AAIA,IAAMI,WAAW;AAAA,qEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,YAAAA,MADY,GACH,IAAIC,iCAAJ,CAAiB;AAC9BC,cAAAA,QAAQ,EAARA,eAD8B;AAE9BC,cAAAA,SAAS,EAATA,gBAF8B;AAG9BC,cAAAA,OAAO,EAAE;AAAA,oBAAGC,GAAH,SAAGA,GAAH;AAAA,oBAAQC,GAAR,SAAQA,GAAR;AAAA,uBAAmB;AAAED,kBAAAA,GAAG,EAAHA,GAAF;AAAOC,kBAAAA,GAAG,EAAHA;AAAP,iBAAnB;AAAA;AAHqB,aAAjB,CADG;;AAOlBC,iCAASC,OAAT,CAAiB,mCAAjB,EAAsD;AACpDC,cAAAA,eAAe,EAAE,IADmC;AAEpDC,cAAAA,kBAAkB,EAAE,IAFgC;AAGpDC,cAAAA,cAAc,EAAE;AAHoC,aAAtD;;AAMMC,YAAAA,GAbY,GAaNf,OAAO,EAbD;AAelBe,YAAAA,GAAG,CAACC,GAAJ,CACEf,OAAO,CAAC;AACNgB,cAAAA,MAAM,EAAE,oBADF;AAENC,cAAAA,MAAM,EAAE,KAFF;AAGNC,cAAAA,iBAAiB,EAAE;AAHb,aAAD,CADT;AAQAhB,YAAAA,MAAM,CAACiB,eAAP,CAAuB;AACrBL,cAAAA,GAAG,EAAHA,GADqB;AAErBM,cAAAA,IAAI,EAAE;AACJC,gBAAAA,WAAW,EAAE,IADT;AAEJC,gBAAAA,MAAM,EAAE;AAFJ;AAFe,aAAvB;AAQAR,YAAAA,GAAG,CAACS,MAAJ,CAAW;AAAEC,cAAAA,IAAI,EAAE;AAAR,aAAX,EAA2B;AAAA,qBACzBC,OAAO,CAACC,GAAR,6DAAuDxB,MAAM,CAACyB,WAA9D,EADyB;AAAA,aAA3B;;AA/BkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAX1B,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAoCAA,WAAW","sourcesContent":["require('dotenv').config();\nimport { ApolloServer } from 'apollo-server-express';\nconst express = require('express');\nconst session = require('express-session');\nimport mongoose from 'mongoose';\nimport { typeDefs, resolvers } from './schemas/index';\n\nconst startServer = async () => {\n  const server = new ApolloServer({\n    typeDefs,\n    resolvers,\n    context: ({ req, res }) => ({ req, res })\n  });\n\n  mongoose.connect('mongodb://localhost:27017/ketuker', {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    useCreateIndex: true,\n  });\n\n  const app = express();\n\n  app.use(\n    session({\n      secret: 'asdjlfkaasdfkjlads',\n      resave: false,\n      saveUninitialized: false\n    })\n  );\n\n  server.applyMiddleware({\n    app,\n    cors: {\n      credentials: true,\n      origin: 'http://localhost:3000'\n    }\n  }); \n\n  app.listen({ port: 4000 }, () =>\n    console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n  );\n};\n\nstartServer();"],"file":"index.js"}